---
substitutions:
  device_name: salt-level
  friendly_name: Zout niveau
  device_description: "Meten van het zout niveau in uw waterontharder"
  version: '1.0'

  project:
    name: Dutch DIY smart home things - Salt level
    version: "${version}"

esphome:
  name: '${device_name}'
  platform: ESP8266
  board: d1_mini

# Enable Home Assistant API
api:

ota:
  #password: "SomeOtaPassword"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: '${device_name}'
    password: 'espsetup'

# Enable logging
logger:

switch:
  - platform: restart
    id: switch_restart
    name: "${friendly_name} Restart"

# Enable Web server.
web_server:
  port: 80
# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: '${friendly_name} ESPHome Version'
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: '${friendly_name} IP'
    ssid:
      name: '${friendly_name} SSID'
    bssid:
      name: '${friendly_name} BSSID'

# Exposed switches.
# Switch to restart the salt_level_sensor.   
switch:
  - platform: restart
    name: '${friendly_name} Restart'

sensor:
  # Uptime sensor.
  - platform: uptime
    name: '${friendly_name} Uptime'

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: '${friendly_name} WiFi Signal'
    update_interval: 60s

  - platform: ultrasonic
    trigger_pin: D1
    echo_pin: D2
    name: '${friendly_name} in percent'
    update_interval: 12h
    filters:
    # Calculates in %
    # Replace 0.42 by the height of your container. From the sensor to the bottom.
    # I used this website to know how I should multiply my values :https://www.skillsyouneed.com/num/percent-change.html 
    - lambda: return (0.42-x)*(100/0.42);
    unit_of_measurement: "%"
    
  - platform: ultrasonic
    trigger_pin: D1
    echo_pin: D2
    name: '${friendly_name} in cm'
    update_interval: 12h
    filters:
    # Replace the 0.42 by the height of your container. From the sensor to the bottom.
    # I multiplied by 100 in order to get CM since the sensor works in meters
    - lambda: return (0.42-x)*100;
    unit_of_measurement: "cm"

  - platform: template
    id: text_sensor_salt_level_version
    name: "${friendly_name} Version"
    update_interval: 5h
    lambda: |-
      return {"${version}"};